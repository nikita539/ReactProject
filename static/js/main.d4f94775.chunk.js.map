{"version":3,"sources":["components/LogIn/log_in.module.css","components/register/register.module.css","components/navbar/navbar.module.css","components/password-recovery/password_recovery.module.css","components/Profile/Profile.module.css","components/new_password/new_password.module.css","components/404/404.module.css","components/navbar/Navbar.tsx","components/Profile/Profile.tsx","API/API.ts","store/log_in-reducer.tsx","components/LogIn/loginForm.tsx","components/LogIn/log_in.tsx","store/register-reducer.tsx","components/register/registerForm.tsx","components/register/register.tsx","components/new_password/new_password.tsx","components/404/404.tsx","common/helpers/validations_rules.ts","components/password-recovery/password_recovery.tsx","common/customHooks/useForm.ts","App.tsx","reportWebVitals.ts","store/store.ts","store/user-reducer.ts","index.tsx"],"names":["module","exports","routes","Navbar","className","classes","to","Profile","instance","axios","create","baseURL","withCredentials","Api","email","password","post","from","message","LogInAC","verified","type","LogInFrom","props","style","width","height","id","aria-describedby","placeholder","value","onChange","setLogin","currentTarget","setPassword","textDecoration","onClick","logInSet","LogIn","dispatch","useDispatch","loginDate","useSelector","state","logIn","console","log","useState","login","Login","H1","then","res","data","catch","error","LogInThunk","initialState","isRegistered","RegisterForm","Register","e","setEmail","Password","confirmPassword","setConfirmPassword","Button","signUp","isRegisteredUser","register","alert","RegisterTC","NewPassword","Four","validate","values","errors","test","length","PasswordRecovery","responseMessage","setResponseMessage","isDisable","setIsDisable","callback","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","handleChange","event","persist","target","name","handleSubmit","preventDefault","useForm","a","response","info","styles","password_recovery","onSubmit","noValidate","disabled","autoComplete","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,MAAQ,wB,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,yBAAyB,SAAW,6B,mBCArGD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,kBAAoB,+C,6DCAtCD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,YAAc,oC,mBCAhCD,EAAOC,QAAU,CAAC,KAAO,oB,gHCKZC,EACE,WADFA,EAEA,UAFAA,EAGG,YAHHA,EAIK,gBAJLA,EAKW,oBALXA,EAME,OA6BAC,EAzBA,WACX,OAAO,qBAAKC,UAAWC,IAAQF,OAAxB,SACH,qBAAIC,UAAU,eAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAAmBE,UAAU,WAA1C,uBAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAAiBE,UAAU,WAAxC,sBAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAAoBE,UAAU,WAA3C,wBAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAAsBE,UAAU,WAA7C,4BAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAA4BE,UAAU,WAAnD,iCAEJ,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASE,GAAIJ,EAAmBE,UAAU,WAA1C,yB,OC1BDG,G,MANC,WACZ,OAAO,qBAAKH,UAAU,UAAf,SACH,6C,wCCHFI,E,OAAWC,EAAMC,OAAO,CAC1BC,QAAQ,6BACRC,iBAAgB,IA2CPC,EAKH,SAACC,EAAaC,GAEhB,OADgBP,EAASQ,KAAgB,aAAa,CAACF,QAAMC,cANxDF,EASA,SAACC,EAAaC,GAEnB,OADgBP,EAASQ,KAAmB,gBAAgB,CAACF,QAAMC,cAV9DF,EAaS,SAACC,GAIf,OAAON,EAASQ,KAA2B,cAAe,CAACF,QAAOG,KAHxD,qDAG8DC,QAF3D,uGC7BRC,EAAU,SAACL,EAAaC,EAAgBK,GACjD,MAAO,CACHC,KAAK,QACLP,QACAC,WACAK,a,QCaOE,EAxCG,SAACC,GAGf,OACI,sBAAKC,MAAO,CAACC,MAAM,OAAOC,OAAO,SAAjC,UACQ,qBAAKtB,UAAU,OAAf,SACI,uBACIiB,KAAK,QACLjB,UAAU,eACVuB,GAAG,qBACHC,mBAAiB,YACjBC,YAAa,QACbC,MAAOP,EAAMT,MACbiB,SAAU,SAACD,GACVP,EAAMS,SAASF,EAAMG,cAAcH,YAG5C,qBAAK1B,UAAU,OAAf,SACI,uBACIiB,KAAK,WACLjB,UAAU,eACVuB,GAAG,wBACHE,YAAa,WACbC,MAAOP,EAAMR,SACbgB,SAAU,SAACD,GACVP,EAAMW,YAAYJ,EAAMG,cAAcH,YAG/C,qBAAK1B,UAAU,kBAAf,SACI,cAAC,IAAD,CAASE,GAAI,oBAAqBkB,MAAO,CAACW,eAAe,QAAzD,+BAEJ,wBACId,KAAK,SACLjB,UAAU,kBACVgC,QAAS,WAAOb,EAAMc,YAH1B,wBCeDC,EA9CD,WAEV,IAAMC,EAAWC,cACXC,EAAYC,aAAwC,SAAAC,GAAK,OAAIA,EAAMC,SACzEC,QAAQC,IAAIL,EAAU3B,OACtB+B,QAAQC,IAAIL,EAAUrB,UALN,MASO2B,mBAAS,IAThB,mBASXC,EATW,KASLhB,EATK,OAUae,mBAAS,IAVtB,mBAUXhC,EAVW,KAUFmB,EAVE,KA0BhB,MAA0B,SAAvBO,EAAUrB,SACF,cAAC,IAAD,CAAUd,GAAIJ,IAEC,UAAvBuC,EAAUrB,SACD,cAAC,IAAD,CAAUd,GAAIJ,IAInB,sBAAKE,UAAWC,IAAQ4C,MAAxB,UACH,oBAAI7C,UAAWC,IAAQ6C,GAAvB,mBACA,cAAC,EAAD,CACIpC,MAAQkC,EACRjC,SAAWA,EACXiB,SArBqB,SAACF,GAC1BE,EAASF,IAqBLI,YAnBwB,SAACJ,GAC7BI,EAAYJ,IAmBRO,SA5BS,WACbE,EFuBkB,SAACzB,EAAaC,GACpC,OAAO,SAACwB,GACJ1B,EAAUC,EAAMC,GACXoC,MAAK,SAACC,GAEHP,QAAQC,IAAIM,EAAIC,MAChBd,EAASpB,EAAQL,EAAMC,EAAS,YACjCuC,OAAM,SAACC,GACNhB,EAASpB,EAAQL,EAAMC,EAAS,cE/B/ByC,CAAWR,EAAMjC,IAC1BiB,EAAS,IACTE,EAAY,WCrBduB,EAAe,CACjBC,cAAc,G,iBC0DHC,EApDM,SAACpC,GAalB,OAGI,sBAAKnB,UAAWoB,IAAMoC,SAAtB,UACI,8BACI,uBAAOvC,KAAK,QACLjB,UAAU,eACVuB,GAAG,gBACHE,YAAY,QACZC,MAAOP,EAAMT,MACbiB,SArBU,SAAC8B,GAC1BtC,EAAMuC,SAASD,EAAE5B,cAAcH,YAsB3B,qBAAK1B,UAAWoB,IAAMuC,SAAtB,SACI,uBAAO1C,KAAK,WACLjB,UAAU,eACVuB,GAAG,mBACHE,YAAY,WACZC,MAAOP,EAAMR,SACbgB,SA1Ba,SAAC8B,GAC7BtC,EAAMW,YAAY2B,EAAE5B,cAAcH,YA2B9B,8BACI,uBAAOT,KAAK,WACLjB,UAAU,eACVuB,GAAG,mBACHE,YAAY,mBACZC,MAAOP,EAAMyC,gBACbjC,SA/BoB,SAAC8B,GACpCtC,EAAM0C,mBAAmBJ,EAAE5B,cAAcH,YAgCrC,qBAAK1B,UAAWoB,IAAM0C,OAAtB,SACI,wBAAQ7C,KAAK,SAASjB,UAAU,kBAAkBgC,QAAS,kBAAMb,EAAM4C,UAAvE,2BCEDP,EAlDE,WACb,IAAMrB,EAAWC,cACX4B,EAAmB1B,aAAuC,SAAAC,GAAK,OAAIA,EAAM0B,SAASX,gBAFrE,EAIKX,mBAAS,IAJd,mBAIdjC,EAJc,KAIPgD,EAJO,OAKWf,mBAAS,IALpB,mBAKdhC,EALc,KAKJmB,EALI,OAMyBa,mBAAS,IANlC,mBAMdiB,EANc,KAMGC,EANH,KAiCnB,OAAO,sBAAK7D,UAAU,WAAf,UACH,0CACA,cAAC,EAAD,CACIU,MAAOA,EACPC,SAAUA,EACViD,gBAAiBA,EACjBC,mBAXyB,SAACnC,GAC9BmC,EAAmBnC,IAWfgC,SAlBe,SAAChC,GACpBgC,EAAShC,IAkBLI,YAhBkB,SAACJ,GACvBI,EAAYJ,IAgBRqC,OAjCO,WAEX,GAAIpD,IAAaiD,EAKjB,OAJIzB,EFQc,SAACzB,EAAaC,GAAd,OAAkC,SAACwB,GACzD1B,EAAaC,EAAMC,GACdoC,MAAK,SAACC,GACHb,EAT0C,CAClDlB,KAAK,WACLqC,cAO4B,OAEvBJ,OAAM,SAACC,GACJe,MAAMf,OEdGgB,CAAWzD,EAAOC,IAI3BqD,OAAJ,EACW,cAAE,IAAF,CAAW9D,GAAI,mBCfnBkE,G,MANK,WAChB,OAAO,qBAAKpE,UAAU,kBCKXqE,G,MANF,WACT,OAAO,qBAAKrE,UAAU,W,0CCJnB,SAASsE,EAASC,GACrB,IAAIC,EAAmB,GAWvB,OAVKD,EAAO7D,MAEA,eAAe+D,KAAKF,EAAO7D,SACnC8D,EAAO9D,MAAQ,4BAFf8D,EAAO9D,MAAQ,4BAId6D,EAAO5D,SAED4D,EAAO5D,SAAS+D,OAAS,IAChCF,EAAO7D,SAAW,yCAFlB6D,EAAO7D,SAAW,uBAIf6D,E,YCNEG,EAAmB,WAAO,IAAD,EACUhC,mBAA6B,IADvC,mBAC7BiC,EAD6B,KACZC,EADY,OAEFlC,oBAAkB,GAFhB,mBAE7BmC,EAF6B,KAElBC,EAFkB,OCHf,SACnBC,EACAV,GAA8C,IAAD,EAEjB3B,mBAAmB,IAFF,mBAEtC4B,EAFsC,KAE9BU,EAF8B,OAGjBtC,mBAAmB,IAHF,mBAGtC6B,EAHsC,KAG9BU,EAH8B,OAILvC,oBAAS,GAJJ,mBAItCwC,EAJsC,KAIxBC,EAJwB,KAuB7C,OAjBAC,qBAAU,WAC6B,IAA/BC,OAAOC,KAAKf,GAAQE,QAAgBS,GACpCH,MAEL,CAACR,IAaG,CACHgB,aANiB,SAACC,GAClBA,EAAMC,UACNT,GAAU,SAAAV,GAAM,kCAASA,GAAT,kBAAkBkB,EAAME,OAAOC,KAAOH,EAAME,OAAOjE,YAKnEmE,aAbiB,SAACJ,GACdA,GAAOA,EAAMK,iBACjBZ,EAAUZ,EAASC,IACnBa,GAAgB,IAWhBb,SACAC,UDLAuB,CAjBgB,uCAAG,4BAAAC,EAAA,6DACnBjB,GAAa,GADM,kBAGMtE,EAAqB8D,EAAO7D,OAHlC,OAGXuF,EAHW,OAIfpB,EAAmBoB,EAAShD,KAAKiD,MAJlB,gDAMfrB,EAAmB,KAAM5B,KAAKE,OANf,yBAQf4B,GAAa,GARE,4EAAH,qDAiBQT,GAJxBC,EAjB8B,EAiB9BA,OACAC,EAlB8B,EAkB9BA,OACAgB,EAnB8B,EAmB9BA,aACAK,EApB8B,EAoB9BA,aAIJ,OAAO,sBAAK7F,UAAWmG,IAAOC,kBAAvB,UACH,yDAA2B,uBAA3B,8BACA,8BACI,uBAAMC,SAAUR,EAAcS,YAAU,EAAxC,UACI,sBAAKtG,UAAU,OAAf,UACI,uBACIiB,KAAK,QACL2E,KAAK,QACLlE,MAAO6C,EAAO7D,OAAS,GACvBV,UAAS,uBAAkBwE,EAAO9D,OAAS,cAC3Ce,YAAY,QACZD,mBAAiB,YACjBG,SAAU6D,EACVe,SAAUzB,EACV0B,aAAa,QAEhBhC,EAAO9D,OACJ,qBAAKV,UAAU,mBAAf,SAAmCwE,EAAO9D,WAdtD,mBAgB0B,wBAClBV,UAAU,kBACViB,KAAK,SAFa,uBAO7B2D,GAAmB,8BAAMA,QE1BnB6B,MAnBf,WACE,OACE,cAAC,IAAD,UACI,sBAAKzG,UAAU,MAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,cAAf,UACI,cAAC,IAAD,CAAO0G,KAAM,WAAYC,UAAWxG,IACpC,cAAC,IAAD,CAAOuG,KAAM,UAAWC,UAAWzE,IACnC,cAAC,IAAD,CAAOwE,KAAM,YAAaC,UAAWnD,IACrC,cAAC,IAAD,CAAOkD,KAAM,gBAAiBC,UAAWvC,IACzC,cAAC,IAAD,CAAOsC,KAAM,oBAAqBC,UAAWhC,IAC7C,cAAC,IAAD,CAAO+B,KAAM,OAAQC,UAAWtC,aCRjCuC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gBCCRO,EAAcC,YAAgB,CAChCC,KCNuB,WAAgD,IAA/C/E,EAA8C,uDAA/B,SAASgF,EAAsB,uCACtE,OAAQA,EAAOtG,MACX,IAAK,MAEL,QACI,OAAOsB,IDEfC,MbUwB,WAAsF,IAArFD,EAAoF,uDAAlE,CAAC7B,MAAM,GAAGC,SAAS,GAAGK,SAAS,QAAQuG,EAA2B,uCAC7G,OAAQA,EAAOtG,MACX,IAAK,QACD,MAAO,CAACP,MAAM6G,EAAO7G,MAAMC,SAAS4G,EAAO5G,SAASK,SAASuG,EAAOvG,UACxE,IAAK,QACD,OAAO,2BAAIuB,GAAX,IAAiBvB,SAAS,SAC9B,QACI,OAAOuB,IahBf0B,SVF2B,WAA+D,IAA9D1B,EAA6D,uDAAnCc,EAAakE,EAAsB,uCACzF,OAAQA,EAAOtG,MACX,IAAK,WACD,OAAO,2BAAMsB,GAAb,IACIe,aAAciE,EAAOjE,eAE7B,QACI,OAAOf,MUDNiF,EAAQC,YAAYL,EAAYM,YAAgBC,MAM7DC,OAAOJ,MAAQA,EEffK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJO,SAASC,eAAe,SAM1BpB,M","file":"static/js/main.d4f94775.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Login\":\"log_in_Login__1wnKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Register\":\"register_Register__3Zs88\",\"Button\":\"register_Button__1M8HL\",\"Password\":\"register_Password__2PzXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"navbar_Navbar__29QZr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"password_recovery\":\"password_recovery_password_recovery__27ri7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3-VuM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPassword\":\"new_password_NewPassword__KEBLf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Four\":\"404_Four__1ATe6\"};","import React from \"react\";\r\nimport {NavLink,Redirect} from \"react-router-dom\";\r\nimport './navbar.module.css'\r\nimport classes from \"./navbar.module.css\"\r\n\r\n\r\nexport const routes = {\r\n    forProfile:\"/Profile\",\r\n    forLogin:\"/Log_in\",\r\n    forRegister:\"/Register\",\r\n    foNewPassword:\"/New_Password\",\r\n    forPasswordRecovery:\"/PasswordRecovery\",\r\n    forMistake:\"/404\"\r\n}\r\n\r\n\r\nconst Navbar = () => {\r\n    return <div className={classes.Navbar}>\r\n        <ul className=\"nav nav-tabs\">\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forProfile} className=\"nav-link\">Profile</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forLogin} className=\"nav-link\" >Log_in</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forRegister} className=\"nav-link\" >Register</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.foNewPassword} className=\"nav-link\">New_Password</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forPasswordRecovery} className=\"nav-link\">Password recovery</NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <NavLink to={routes.forMistake} className=\"nav-link\">404</NavLink>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./Profile.module.css\"\r\n\r\nconst Profile = () => {\r\n    return <div className=\"Profile\">\r\n        <h1>Profile</h1>\r\n    </div>\r\n}\r\n\r\nexport default Profile;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"http://localhost:7542/2.0/\",\r\n    withCredentials:true\r\n})\r\n\r\n\r\ntype pingType = {\r\n    backTime:number\r\n    frontTime:string\r\n    info:string\r\n    ping:number\r\n}\r\ntype LogInType = {\r\n    _id:string\r\n    email:string\r\n    name:string\r\n    avatar?:string\r\n    publicCardPacksCount:number\r\n    created:Date\r\n    update:Date\r\n    isAdmin:boolean\r\n    verified:boolean\r\n    rememberMe:boolean\r\n    error?:string\r\n}\r\ntype RegisterType = {\r\n    addedUser: {\r\n        created: Date\r\n        email: string\r\n        isAdmin: boolean\r\n        name: string\r\n        publicCardPacksCount: number\r\n        updated: Date\r\n        verified: boolean\r\n        __v: number\r\n        _id: string\r\n    }\r\n    error?:string\r\n}\r\n\r\nexport type RecoveryResponseType = {\r\n    info?: string\r\n    error?: string\r\n}\r\n\r\nexport const Api = {\r\n    getPing:() => {\r\n        const promise = instance.get<pingType>(\"ping\")\r\n        return promise\r\n    },\r\n    logIn:(email:string,password:string) => {\r\n        const promise = instance.post<LogInType>(\"auth/login\",{email,password})\r\n        return promise\r\n    },\r\n    register:(email:string,password:string) => {\r\n        const promise = instance.post<RegisterType>(\"auth/register\",{email,password})\r\n        return promise\r\n    },\r\n    recoveryPassword: (email: string | undefined) => {\r\n        const from = `test-front-admin <dmytrostorozhenko1994@gmail.com>`\r\n        const message =\r\n            `<div>password recover link: <a href='http://localhost:3000/#/set-new-password/$token$'></a></div>`\r\n        return instance.post<RecoveryResponseType>(\"auth/forgot\", {email, from, message})\r\n    }\r\n}","import {Dispatch} from 'redux'\r\nimport {Api} from \"../API/API\";\r\n\r\ntype verifiedType = \"true\" | \"false\" | \"none\"\r\n\r\ntype actionLogINType = {\r\n    type:\"LOGIN\"\r\n    email:string\r\n    password:string\r\n    verified:verifiedType\r\n}\r\ntype resetVerifiedType = {\r\n    type:\"RESET\"\r\n}\r\nexport type stateType = {\r\n    email:string,\r\n    password:string,\r\n    verified:verifiedType\r\n}\r\n\r\ntype actionLoginType = actionLogINType | resetVerifiedType\r\n\r\nexport const logInReducer = (state:stateType = {email:\"\",password:\"\",verified:\"none\"},action:actionLoginType) => {\r\n    switch (action.type){\r\n        case \"LOGIN\":\r\n            return {email:action.email,password:action.password,verified:action.verified}\r\n        case \"RESET\":\r\n            return {...state,verified:\"none\"}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const LogInAC = (email:string,password:string,verified:verifiedType) => {\r\n    return {\r\n        type:\"LOGIN\",\r\n        email,\r\n        password,\r\n        verified\r\n    }\r\n}\r\nexport const ResetAC = () => {\r\n    return {\r\n        type:\"RESET\"\r\n    }\r\n}\r\n\r\n\r\nexport const LogInThunk = (email:string,password:string) => {\r\n    return (dispatch:Dispatch) => {\r\n        Api.logIn(email,password)\r\n            .then((res) => {\r\n                debugger\r\n                console.log(res.data)\r\n                dispatch(LogInAC(email,password,\"true\"))\r\n            }).catch((error) => {\r\n                dispatch(LogInAC(email,password,\"false\"))\r\n        })\r\n    }\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype propsType = {\r\n    email:string\r\n    password:string\r\n    setLogin:(value:string) => void\r\n    setPassword:(value:string) => void\r\n    logInSet:() => void\r\n}\r\n\r\nconst LogInFrom = (props:propsType) => {\r\n\r\n\r\n    return (\r\n        <div style={{width:\"100%\",height:'200px'}}>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputEmail1\"\r\n                        aria-describedby=\"emailHelp\"\r\n                        placeholder={\"Email\"}\r\n                        value={props.email}\r\n                        onChange={(value) =>\r\n                        {props.setLogin(value.currentTarget.value)}}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        id=\"exampleInputPassword1\"\r\n                        placeholder={\"Password\"}\r\n                        value={props.password}\r\n                        onChange={(value) =>\r\n                        {props.setPassword(value.currentTarget.value)}}\r\n                    />\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                    <NavLink to={\"/PasswordRecovery\"} style={{textDecoration:'none'}}>forgot password</NavLink>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => {props.logInSet()}}\r\n                >Submit</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogInFrom;","import React, {useEffect, useState} from \"react\";\r\nimport './log_in.module.css'\r\nimport classes from './log_in.module.css'\r\nimport {LogInAC, LogInThunk} from \"../../store/log_in-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport LogInFrom from \"./loginForm\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport {AppRootStateType, store} from \"../../store/store\";\r\nimport {routes} from \"../navbar/Navbar\";\r\nimport {stateType} from \"../../store/log_in-reducer\";\r\n\r\nconst LogIn = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const loginDate = useSelector<AppRootStateType,stateType>(state => state.logIn)\r\n    console.log(loginDate.email)\r\n    console.log(loginDate.verified)\r\n\r\n\r\n\r\n    let [login,setLogin] = useState('')\r\n    let [password,setPassword] = useState('')\r\n\r\n\r\n    const logInSet = () => {\r\n        dispatch(LogInThunk(login,password))\r\n        setLogin(\"\")\r\n        setPassword(\"\")\r\n    }\r\n    const setLoginWithUseState = (value:string) => {\r\n        setLogin(value)\r\n    }\r\n    const setPasswordWithUseState = (value:string) => {\r\n        setPassword(value)\r\n    }\r\n\r\n\r\n    if(loginDate.verified === \"true\"){\r\n        return <Redirect to={routes.forProfile}/>\r\n    }\r\n    if(loginDate.verified === \"false\"){\r\n        return  <Redirect to={routes.forRegister}/>\r\n    }\r\n\r\n\r\n    return <div className={classes.Login}>\r\n        <h1 className={classes.H1} >Login</h1>\r\n        <LogInFrom\r\n            email={ login }\r\n            password={ password }\r\n            setLogin={ setLoginWithUseState }\r\n            setPassword={ setPasswordWithUseState }\r\n            logInSet={ logInSet }\r\n        />\r\n    </div>\r\n}\r\n\r\nexport default LogIn;","import {Dispatch} from 'redux'\r\nimport {Api} from \"../API/API\";\r\n\r\ntype actionType = ReturnType<typeof RegisterAC>\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    isRegistered: false\r\n}\r\n\r\n\r\nexport const registerReducer = (state: initialStateType = initialState,action:actionType) => {\r\n    switch (action.type){\r\n        case \"REGISTER\":\r\n            return   {...state,\r\n                isRegistered: action.isRegistered\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const RegisterAC = (isRegistered: boolean) => ({\r\n    type:\"REGISTER\",\r\n    isRegistered\r\n} as const)\r\n\r\n\r\nexport const RegisterTC = (email:string,password:string) => (dispatch:Dispatch) => {\r\n    Api.register(email,password)\r\n        .then((res) => {\r\n            dispatch(RegisterAC(true))\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n        })\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport style from './register.module.css'\r\n\r\ntype registerFormType = {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n    setEmail: (value: string) => void\r\n    setPassword: (value: string) => void\r\n    setConfirmPassword: (value: string) => void\r\n    signUp: () => void\r\n}\r\n\r\nconst RegisterForm = (props: registerFormType) => {\r\n\r\n    const onChangeLoginHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeConfirmPasswordHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.setConfirmPassword(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className={style.Register}>\r\n            <div >\r\n                <input type=\"email\"\r\n                       className=\"form-control\"\r\n                       id=\"floatingInput\"\r\n                       placeholder=\"Login\"\r\n                       value={props.email}\r\n                       onChange={onChangeLoginHandler}/>\r\n            </div>\r\n            <div className={style.Password}>\r\n                <input type=\"password\"\r\n                       className=\"form-control\"\r\n                       id=\"floatingPassword\"\r\n                       placeholder=\"Password\"\r\n                       value={props.password}\r\n                       onChange={onChangePasswordHandler}/>\r\n            </div>\r\n            <div>\r\n                <input type=\"password\"\r\n                       className=\"form-control\"\r\n                       id=\"floatingPassword\"\r\n                       placeholder=\"Confirm password\"\r\n                       value={props.confirmPassword}\r\n                       onChange={onChangeConfirmPasswordHandler}/>\r\n            </div>\r\n            <div className={style.Button}>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => props.signUp()}>Sign up</button>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default RegisterForm","import React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RegisterTC} from \"../../store/register-reducer\";\r\nimport RegisterForm from \"./registerForm\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\n\r\nconst Register = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegisteredUser = useSelector<AppRootStateType, boolean>(state => state.register.isRegistered)\r\n\r\n    let [email, setEmail] = useState('')\r\n    let [password, setPassword] = useState('')\r\n    let [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n\r\n    const signUp = () => {\r\n\r\n        if (password === confirmPassword) {\r\n            dispatch(RegisterTC(email, password))\r\n        } else {\r\n            return\r\n        }\r\n        if(!isRegisteredUser) {\r\n            return < Redirect to={\"/Log_in\"}/>\r\n        }\r\n\r\n    }\r\n\r\n    const setEmailChange = (value: string) => {\r\n        setEmail(value)\r\n    }\r\n    const setPasswordChange = (value: string) => {\r\n        setPassword(value)\r\n    }\r\n    const setConfirmPasswordChange = (value: string) => {\r\n        setConfirmPassword(value)\r\n    }\r\n\r\n\r\n    return <div className=\"Register\">\r\n        <h1>Register</h1>\r\n        <RegisterForm\r\n            email={email}\r\n            password={password}\r\n            confirmPassword={confirmPassword}\r\n            setConfirmPassword={setConfirmPasswordChange}\r\n            setEmail={setEmailChange}\r\n            setPassword={setPasswordChange}\r\n            signUp={signUp}\r\n        />\r\n\r\n    </div>\r\n\r\n\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./new_password.module.css\"\r\n\r\nconst NewPassword = () => {\r\n    return <div className=\"NewPassword\">\r\n\r\n    </div>\r\n}\r\n\r\nexport default NewPassword;","import React from \"react\";\r\nimport \"./404.module.css\"\r\n\r\nconst Four = () => {\r\n    return <div className=\"Four\">\r\n\r\n    </div>\r\n}\r\n\r\nexport default Four;","export function validate(values: Validate) {\r\n    let errors: Validate = {};\r\n    if (!values.email) {\r\n        errors.email = 'Email address is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Password is required';\r\n    } else if (values.password.length < 6) {\r\n        errors.password = 'Password must be 6 or more characters';\r\n    }\r\n    return errors;\r\n}\r\n\r\n// types\r\nexport type Validate = {\r\n    email?: string | undefined\r\n    password?: string | undefined\r\n}","import React, {useState} from \"react\";\r\nimport styles from \"./password_recovery.module.css\"\r\nimport {Api} from \"../../API/API\";\r\nimport {validate} from \"../../common/helpers/validations_rules\";\r\nimport {useForm} from \"../../common/customHooks/useForm\";\r\n//11\r\nexport const PasswordRecovery = () => {\r\n    let [responseMessage, setResponseMessage] = useState<string | undefined>('')\r\n    let [isDisable, setIsDisable] = useState<boolean>(false)\r\n\r\n    const submitCallback = async () => {\r\n        setIsDisable(true)\r\n        try {\r\n            let response = await Api.recoveryPassword(values.email)\r\n            setResponseMessage(response.data.info)\r\n        } catch (error) {\r\n            setResponseMessage(error.data.error)\r\n        } finally {\r\n            setIsDisable(false)\r\n        }\r\n    }\r\n\r\n    const {\r\n        values,\r\n        errors,\r\n        handleChange,\r\n        handleSubmit,\r\n    } = useForm(submitCallback, validate);\r\n\r\n\r\n    return <div className={styles.password_recovery}>\r\n        <p>Enter your email address<br/>to recover your password</p>\r\n        <div>\r\n            <form onSubmit={handleSubmit} noValidate>\r\n                <div className='mb-3'>\r\n                    <input\r\n                        type='email'\r\n                        name='email'\r\n                        value={values.email || ''}\r\n                        className={`form-control ${errors.email && 'is-invalid'}`}\r\n                        placeholder='Email'\r\n                        aria-describedby='emailHelp'\r\n                        onChange={handleChange}\r\n                        disabled={isDisable}\r\n                        autoComplete='off'\r\n                    />\r\n                    {errors.email && (\r\n                        <div className='invalid-feedback'>{errors.email}</div>\r\n                    )}\r\n                </div>                <button\r\n                    className='btn btn-primary'\r\n                    type='submit'\r\n                >Send\r\n                </button>\r\n            </form>\r\n        </div>\r\n        {responseMessage && <div>{responseMessage}</div>}\r\n    </div>\r\n}","import {useState, useEffect, ChangeEvent, FormEvent} from 'react';\r\nimport {Validate} from \"../helpers/validations_rules\";\r\n\r\nexport const useForm = (\r\n    callback: () => void,\r\n    validate: (values: Validate) => Validate) => {\r\n\r\n    const [values, setValues] = useState<Validate>({});\r\n    const [errors, setErrors] = useState<Validate>({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();//d\r\n        }\r\n    }, [errors]);\r\n\r\n    const handleSubmit = (event: FormEvent) => {\r\n        if (event) event.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        event.persist();\r\n        setValues(values => ({...values, [event.target.name]: event.target.value}));\r\n    };\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n    }\r\n};","import React from \"react\";\r\nimport './App.css';\r\nimport Navbar from './components/navbar/Navbar'\r\nimport {BrowserRouter,Route} from \"react-router-dom\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport LogIn from \"./components/LogIn/log_in\";\r\nimport Register from \"./components/register/register\";\r\nimport NewPassword from \"./components/new_password/new_password\";\r\nimport Four from \"./components/404/404\";\r\nimport {PasswordRecovery} from \"./components/password-recovery/password_recovery\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <div className=\"RenderPlace\">\r\n                <Route path={\"/Profile\"} component={Profile}/>\r\n                <Route path={\"/Log_in\"} component={LogIn}/>\r\n                <Route path={\"/Register\"} component={Register}/>\r\n                <Route path={\"/New_Password\"} component={NewPassword}/>\r\n                <Route path={\"/PasswordRecovery\"} component={PasswordRecovery}/>\r\n                <Route path={\"/404\"} component={Four}/>\r\n            </div>\r\n        </div>\r\n        \r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, applyMiddleware,createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {userReducer} from \"./user-reducer\";\r\nimport {logInReducer} from \"./log_in-reducer\";\r\nimport {registerReducer} from \"./register-reducer\";\r\n\r\n// import { reducer as formReducer } from 'redux-form'\r\n\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    user:userReducer,\r\n    logIn:logInReducer,\r\n    register: registerReducer,\r\n    // form:formReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;","type actionType = {\r\n    type:\"Add\"\r\n}\r\n\r\n\r\nexport const userReducer = (state:string = 'Nikita',action:actionType) => {\r\n    switch (action.type){\r\n        case \"Add\":\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n      <App/>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}